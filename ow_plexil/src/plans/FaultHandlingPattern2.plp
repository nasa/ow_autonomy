// The Notices and Disclaimers for Ocean Worlds Autonomy Testbed for Exploration
// Research and Simulation can be found in README.md in the root directory of
// this repository.

// This plan demonstrates independent fault detection and handling for
// two concurrent actions.

// Action 1: Pan antenna in 15 degree increments.
// Action 2: Unstow and stow the arm repeatedly.
// If no faults are occurring, action 1 and 2 occur simultaneously.
// If an antenna pan fault but no arm fault is injected, only action 2 occurs.
// If an arm fault but no antenna pan fault is injected, only action 1 occurs.
// If both antenna pan and arm faults are injected, the plan waits for resolution.

// This plan terminates on a power fault, e.g. by injecting low state
// of charge, instantaneous capacity loss, or thermal failure.  Note
// that because the Pan and SafeStow plans are synchronous, any
// actions in progress must finish first, i.e. antenna and arm faults
// must be cleared before the power fault is heeded.

#include "ow-interface.h"

FaultHandlingPattern2:
{
  Real NewAngle = 0;
  String id;

  log_info ("Starting FaultHandlingPattern2 plan...");
  id = StartPlan ("ClearGoalErrors");

  Run: Concurrence
  {
    Antenna: UncheckedSequence
    {
      Repeat !Lookup(PowerFault);

      Pan:
      {
        Start !Lookup(AntennaPanError);
        Invariant !Lookup(AntennaPanError);

        NewAngle = (Lookup(PanDegrees) + 15) mod 360;
        if (NewAngle > 180) NewAngle = NewAngle - 360;
        LibraryCall Pan (Degrees = NewAngle);
      }
    }

    Arm: UncheckedSequence
    {
      Repeat !Lookup(PowerFault);

      StowUnstow:
      {
        Start !Lookup(ArmFault);
        Invariant !Lookup(ArmFault);

        LibraryCall SafeStow();
      }
    }
  }

  ExitPlan (id);
  log_info ("Finished FaultHandlingPattern2 plan.");
}
