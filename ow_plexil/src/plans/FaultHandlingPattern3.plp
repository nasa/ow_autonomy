// The Notices and Disclaimers for Ocean Worlds Autonomy Testbed for Exploration
// Research and Simulation can be found in README.md in the root directory of
// this repository.

// This plan illustrates the halting and resumption of a sequence in
// the presence of faults.

// If no faults are present this plan will, in sequence, pan the
// antenna to 180 degrees, unstow the arm, and then stow it. If a
// fault *relevant* to the current action is injected or present, the
// plan will pause until the fault is cleared.  The current action
// will resume if possible (e.g. not timed out) and then the sequence
// will continue.  Finally the success status of each operation
// (i.e. did it complete successfully) is printed.

// NOTE: If needed, pan the antenna to 0 degrees manually before
// starting this plan.

#include "ow-interface.h"

FaultHandlingPattern3: UncheckedSequence
{
  Boolean PanSuccess;
  Boolean UnstowSuccess;
  Boolean StowSuccess;

  log_info ("Starting FaultHandlingPattern3 plan...");

  PanAntenna:
  {
    Start !Lookup(AntennaPanFault);
    Invariant !Lookup(AntennaPanFault);
    Post Lookup(ActionGoalStatus("Pan")) == ACTION_SUCCEEDED;

    LibraryCall Pan (Degrees=180);
    log_info ("-- Pan status: ", Lookup(ActionGoalStatus("Pan")));
    log_info ("-- Success val: ", ACTION_SUCCEEDED);
  }

  log_info ("-- Pan status 2: ", Lookup(ActionGoalStatus("Pan")));
  PanSuccess = PanAntenna.outcome == SUCCESS;

  Unstow:
  {
    Start !Lookup(ArmFault);
    Invariant !Lookup(ArmFault);
    Post Lookup(ActionGoalStatus("ArmUnstow")) == ACTION_SUCCEEDED;

    LibraryCall ArmUnstow();
  }

  UnstowSuccess = Unstow.outcome == SUCCESS;

  log_info ("-- Arm Fault: ", Lookup(ArmFault));

  Stow:
  {
    Start !Lookup(ArmFault);
    Invariant !Lookup(ArmFault);
    Post Lookup(ActionGoalStatus("ArmStow")) == ACTION_SUCCEEDED;

    LibraryCall ArmStow();
  }

  StowSuccess = Stow.outcome == SUCCESS;

  log_info ("Outcomes (Pan, Unstow, Stow) = ",
            PanSuccess, " ", UnstowSuccess, " ", StowSuccess);
  log_info ("FaultHandlingPattern3 plan complete.");
}
